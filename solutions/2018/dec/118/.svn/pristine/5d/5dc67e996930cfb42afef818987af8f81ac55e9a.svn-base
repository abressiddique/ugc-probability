# -*- coding: utf-8 -*-
"""Assignment7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pr42wNUOhOdW9Td-gAAKoZVcVpLNUGaw
"""

import scipy.integrate as integrate
import matplotlib.pyplot as plt
import numpy as np




#Probabiltiy distrubution function f(x)
def f(x,alpha,beta) : 
  return ( ( alpha*(x**(alpha -1)) + beta*(x**(beta-1) ) )*np.exp(-(x**alpha) - (x**beta)) )



x = np.arange(1,2.5,0.001) 

#Cummulative distrubution function 
def cdf(x):
  res = np.zeros_like(x)
  for i,val in enumerate(x):
        res[i] = integrate.quad(f,0,val,args=(alpha,beta))[0] 
  return res

#Hazard function h(x)
def h(x,alpha,beta):
  return f(x,alpha,beta)/(1-cdf(x))

fig = plt.figure()

#Let 
alpha = 3
beta = 3
# plot the function
plt.plot(x,h(x,alpha,beta), 'r',label="when alpha,beta>1")
#Let 

alpha = 1
beta = 1
plt.plot(x,h(x,alpha,beta), 'b',label ="when alpha=beta=1")

# show the plot
plt.xlabel("x")
plt.ylabel("h(x)")
plt.legend()
plt.show()

#From graph , h(x) can be an increasing function or a constant function.