# -*- coding: utf-8 -*-
"""assignment8graphbased.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dPMltpYu8cD1vsHNFivqHmZGeTiuyV32
"""

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import bernoulli
import math
from scipy import stats
from scipy import integrate
import random

count=0

def lim(x):
  y=x**2
  return y

def line1(x):
  y=0-0*x
  return y
def line2(x):
  y=1-0*x
  return y


x1=np.arange(0,1,0.01)
x2=np.arange(1,2,0.01)
y1=lim(x1)
y2=lim(x2)
y3=line1(x1)
y4=line2(x1)
x_1=line1(x1)
x_2=line2(x1)
plt.plot(x1,y1,color='black')
plt.plot(x2,y2,color='black')
plt.plot(x1,y3,color='black')
plt.plot(x1,y4,color='black')
plt.plot(x_1,x1,color='black')
plt.plot(x_2,x1,color='black')
plt.fill_between(x1,y1)
plt.annotate("(1,1)",(1,1))
plt.xlabel("x")
plt.ylabel("y")
plt.title("probability of w>0")
plt.grid()
plt.show()
Area_shaded=1/3
Area_rec=1
req_prob=Area_shaded/Area_rec
print(f'P(w>0)=',req_prob)